# print(getwd())
setwd("D:\\Data Analytics\\DataAnalytics2021_Dominic_Schroeder\\Labs\\Lab 1")
EPI_data <- read.csv("data\\2010EPI_data.csv")
# Ensure the first row is the names of the columns
colnames(EPI_data) <- EPI_data[1,]
EPI_data <- EPI_data[-1,]
# Ensure the first row is the names of the columns
colnames(EPI_data) <- EPI_data[1,]
if (FALSE) {
"
I tried to read the excel form of this data sheet but it resulted
in me running out of memory
> EPI_Excel_data <- read.xlsx(data\\2010EPI_data.xls, EPI2010_onlyEPIcountries)
Error in .jcall(RJavaTools, Ljava/lang/Object;, invokeMethod, cl,  :
java.lang.OutOfMemoryError: Java heap space
"
}
View(EPI_data)
attach(EPI_data) 	# sets the object
fix(EPI_data) 	# launches a simple data editor
EPI <- EPI_data$EPI 			# prints out values EPI_data$EPI
EPI <- EPI_data$EPI 			# prints out values EPI_data$EPI
tf <- is.na(EPI) # records True values if the value is NA
E <- EPI[!tf] # filters out NA values, new array
print(E)
attach(EPI_data) 	# sets the object
fix(EPI_data) 	# launches a simple data editor
EPI <- EPI_data$EPI 			# prints out values EPI_data$EPI
tf <- is.na(EPI) # records True values if the value is NA
E <- EPI[!tf] # filters out NA values, new array
print(E)
EPI_data <- EPI_data[-1,]
if (FALSE) {
"
I tried to read the excel form of this data sheet but it resulted
in me running out of memory
> EPI_Excel_data <- read.xlsx(data\\2010EPI_data.xls, EPI2010_onlyEPIcountries)
Error in .jcall(RJavaTools, Ljava/lang/Object;, invokeMethod, cl,  :
java.lang.OutOfMemoryError: Java heap space
"
}
View(EPI_data)
attach(EPI_data) 	# sets the object
if (FALSE) {
"
I tried to read the excel form of this data sheet but it resulted
in me running out of memory
> EPI_Excel_data <- read.xlsx(data\\2010EPI_data.xls, EPI2010_onlyEPIcountries)
Error in .jcall(RJavaTools, Ljava/lang/Object;, invokeMethod, cl,  :
java.lang.OutOfMemoryError: Java heap space
"
}
View(EPI_data)
attach(EPI_data) 	# sets the object
fix(EPI_data) 	# launches a simple data editor
EPI <- EPI_data$EPI 			# prints out values EPI_data$EPI
tf <- is.na(EPI) # records True values if the value is NA
EPI <- as.numeric(EPI_data$EPI)
View(EPI_data)
View(EPI_data)
EPI_data <- read.csv("data\\2010EPI_data.csv")
# Ensure the first row is the names of the columns
colnames(EPI_data) <- EPI_data[1,]
EPI_data <- EPI_data[-1,]
attach(EPI_data) 	# sets the object
fix(EPI_data) 	# launches a simple data editor
EPI <- EPI_data$EPI 			# prints out values EPI_data$EPI
tf <- is.na(EPI) # records True values if the value is NA
E <- EPI[!tf] # filters out NA values, new array
print(E)
#other data
GRUMP_data <- read.csv("data\\GPW3_GRUMP_SummaryInformation_2010.csv")
GRUMP_data
GRUMP_data <- GRUMP_data[-1,]
attach(GRUMP_data)
fix(GRUMP_data)
# Ensure the first row is the names of the columns
colnames(GRUMP_data) <- GRUMP_data[1,]
EPI <- as.numeric(EPI_data$EPI)
EPI
summary(EPI) 	# stats
#Landlock
EPILand<-EPI[!Landlock]
#Define the LandLock vector
Landlock = as.logical(EPI_data$Landlock)
#Landlock
EPILand<-EPI[!Landlock]
Eland <- EPILand[!is.na(EPILand)]
#
hist(ELand)
#
hist(ELand)
ELand <- EPILand[!is.na(EPILand)]
#
hist(ELand)
#Define the LandLock vector
Landlock = as.logical(EPI_data$Landlock)
#Define the LandLock vector
Landlock = EPI_data$Landlock
#Landlock
EPILand<-EPI[!Landlock]
#Define the LandLock vector
Landlock = as.logical(EPI_data$Landlock)
#Define the LandLock vector
Landlock = EPI_data$Landlock
#Landlock
EPILand<-EPI[!Landlock]
ELand <- EPILand[!is.na(EPILand)]
#Define the LandLock vector
Landlock = EPI_data$Landlock
#Landlock
EPILand<-EPI[!Landlock]
#Define the LandLock vector
Landlock = as.numeric(EPI_data$Landlock)
#Landlock
EPILand<-EPI[!Landlock]
ELand <- EPILand[!is.na(EPILand)]
#
hist(ELand)
hist(ELand, seq(30., 95., 1.0), prob=TRUE)
#Define the LandLock vector
Landlock = as.numeric(EPI_data$Landlock)
#Landlock
EPILand<-EPI[!Landlock]
ELand <- EPILand[!is.na(EPILand)]
#
hist(ELand)
hist(ELand, seq(30., 95., 1.0), prob=TRUE)
#Define the LandLock vector
Landlock = as.logical(as.numeric(EPI_data$Landlock))
#Landlock
EPILand<-EPI[!Landlock]
ELand <- EPILand[!is.na(EPILand)]
# Explore two other variables from the EPI_Data set
AIR_H <- as.numeric(EPI_data$AIR_H)
WATER_H <- as.numeric(EPI_data$WATER_H)
tf <- is.na(AIR_H) # records True values if the value is NA
filteredAIR <- AIR_H[!tf] # filters out NA values, new array
print(filteredAIR)
#Define the LandLock vector
Landlock = as.logical(as.numeric(EPI_data$Landlock))
#Landlock
EPIair<-EPI[!Landlock]
EAir <- EPIair[!is.na(EPIair)]
#
hist(EAir)
hist(ELand, seq(30., 95., 1.0), prob=TRUE)
#Landlock
EPIair<-AIE_H[!Landlock]
#Landlock
EPIair<-AIR_H[!Landlock]
EAir <- EPIair[!is.na(EPIair)]
#
hist(EAir)
hist(ELand, seq(30., 95., 1.0), prob=TRUE)
hist(EAir, seq(30., 95., 1.0), prob=TRUE)
#
hist(EAir)
hist(EAir, seq(30., 95., 1.0), prob=TRUE)
hist(EAir, seq(1., 100., 1.0), prob=TRUE)
hist(EAir, seq(30., 100., 1.0), prob=TRUE)
hist(EAir, seq(1., 100., 1.0), prob=TRUE)
